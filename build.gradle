plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
}

group 'ru.slelaron.bachelor'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.3.20'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task testerJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'tester.jar'
    manifest {
        attributes 'Implementation-Title': 'Tester',
                'Main-Class': 'TesterKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

task generatorJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'generator.jar'
    manifest {
        attributes 'Implementation-Title': 'Generator',
                'Main-Class': 'GeneratorKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

task mainJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'main.jar'
    manifest {
        attributes 'Implementation-Title': 'Main program',
                'Main-Class': 'MainKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

task verwerJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'verwer.jar'
    manifest {
        attributes 'Implementation-Title': 'Translator to verwer format',
                'Main-Class': 'VerwerKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

task rtaJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'rta.jar'
    manifest {
        attributes 'Implementation-Title': 'Translator from verwer rta to my format',
                'Main-Class': 'RTAKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

task estimatorJar(dependsOn: 'classes', type: Jar) {
    archiveName = 'estimator.jar'
    manifest {
        attributes 'Implementation-Title': 'Estimator',
                'Main-Class': 'EstimatorKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.output
    destinationDir = file("${buildDir}/jars")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
